version: "3.7"

volumes:
  postresql13_data: {}
  postresql14_data: {}
  plausible_db_data: {}
  plausible_events_db_data: {}
  redis_data: {}
  https_portal: {}
  https_logs: {}
  prometheus_data: {}
  alertmanager_data: {}
  grafana_data: {}
  geoip_data: {}
  maildata: {}
  mailstate: {}
  maillogs: {}
  mailserver_var_mail: {}
  mailserver_var_mailstate: {}
  mailserver_var_log_mail: {}
  mailserver_config: {}

services:
  nginx:
    image: "docker.io/library/nginx:1.20.2"
    container_name: "evemonk_nginx"
    restart: "unless-stopped"
    volumes:
      - "./nginx-evemonk.conf:/etc/nginx/conf.d/default.conf:ro"

  pghero_nginx:
    image: "docker.io/library/nginx:1.20.2"
    container_name: "evemonk_pghero_nginx"
    restart: "unless-stopped"
    volumes:
      - "./evemonk-pghero-nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro"

  nginx_static:
    image: "docker.io/library/nginx:1.20.2"
    container_name: "evemonk_nginx_static"
    restart: "unless-stopped"
    volumes:
      - "/srv/static:/var/www:ro"
      - "./nginx-static.conf:/etc/nginx/conf.d/default.conf:ro"

#  blog:
#    image: "biow0lf/evemonk-blog:latest"
#    container_name: "evemonk_blog"
#    restart: "unless-stopped"

  blog:
    image: "docker.io/library/nginx:1.20.2"
    container_name: "evemonk_blog"
    restart: "unless-stopped"

#  nginx_exporter:
#    image: "docker.io/nginx/nginx-prometheus-exporter:0.8.0"
#    container_name: "evemonk_nginx_exporter"
#    restart: "unless-stopped"

  https_portal:
    image: "docker.io/steveltn/https-portal:1.21.0"
    container_name: "evemonk_https_portal"
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "https_portal:/var/lib/https-portal:rw"
      - "https_logs:/var/log/nginx:rw"
    environment:
      STAGE: "production"
      WEBSOCKET: "true"
      LISTEN_IPV6: "true"
      DOMAINS: "evemonk.com -> http://nginx,
                blog.evemonk.com -> http://blog,
                static.evemonk.com -> http://nginx_static,
                www.evemonk.com => https://evemonk.com,
                mail.evemonk.com,
                irregularquiz.rpisarev.org.ua -> http://irregularquiz:5000,
                imageproxy.evemonk.com -> http://imageproxy:8081,
                username:password@cadvisor.evemonk.com -> http://cadvisor:8080,
                pghero.evemonk.com -> http://pghero_nginx,
                pg-extras.evemonk.com -> http://nginx,
                username:password@sidekiq.evemonk.com -> http://nginx,
                grafana.evemonk.com -> http://grafana:3000,
                plausible.evemonk.com -> http://plausible:8000,
                username:password@prometheus.evemonk.com -> http://prometheus:9090,
                username:password@alertmanager.evemonk.com -> http://alertmanager:9093"

  redis:
    image: "docker.io/library/redis:6.2.6"
    container_name: "evemonk_redis"
    restart: "unless-stopped"
    volumes:
      - "redis_data:/data:rw"

  redis_exporter:
    image: "docker.io/oliver006/redis_exporter:v1.35.1"
    container_name: "evemonk_redis_exporter"
    restart: "unless-stopped"
    command:
      - "--redis.addr=redis://redis:6379"

  memcached:
    image: "docker.io/library/memcached:1.6.14"
    container_name: "evemonk_memcached"
    restart: "unless-stopped"
    command: "memcached -m 64"

  memcached_exporter:
    image: "docker.io/prom/memcached-exporter:v0.9.0"
    container_name: "evemonk_memcached_exporter"
    restart: "unless-stopped"
    command:
      - "--memcached.address=memcached:11211"

  postgresql:
    image: "docker.io/library/postgres:13.6"
    container_name: "evemonk_postgresql"
    restart: "unless-stopped"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - "postresql13_data:/var/lib/postgresql/data:rw"
      - "./postgres:/docker-entrypoint-initdb.d:ro"

  postgres_exporter:
    image: "docker.io/wrouesnel/postgres_exporter:v0.8.0"
    container_name: "evemonk_postgres_exporter"
    restart: "unless-stopped"
    env_file: ".env_postgres_exporter"

  prometheus:
    image: "docker.io/prom/prometheus:v2.33.3"
    container_name: "evemonk_prometheus"
    restart: "unless-stopped"
    volumes:
      - "./prometheus/:/etc/prometheus:ro"
      - "prometheus_data:/prometheus:rw"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.external-url=https://prometheus.evemonk.com/"

  node_exporter:
    image: "docker.io/prom/node-exporter:v1.3.1"
    container_name: "evemonk_node_exporter"
    restart: "unless-stopped"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  cadvisor:
    image: "gcr.io/google_containers/cadvisor:v0.36.0"
    container_name: "evemonk_cadvisor"
    restart: "unless-stopped"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"

  blackbox_exporter:
    image: "docker.io/prom/blackbox-exporter:v0.19.0"
    container_name: "evemonk_blackbox_exporter"
    restart: "unless-stopped"

  alertmanager:
    image: "docker.io/prom/alertmanager:v0.23.0"
    container_name: "evemonk_alertmanager"
    restart: "unless-stopped"
    ports:
      - "9093:9093"
    volumes:
      - "./alertmanager/:/etc/alertmanager:ro"
      - "alertmanager_data:/alertmanager:rw"
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
      - "--web.external-url=https://alertmanager.evemonk.com/"

#  karma:
#    image: 'lmierzwa/karma:v0.39'
#    container_name: evemonk_karma
#    restart: unless-stopped

  grafana:
    image: "docker.io/grafana/grafana:8.3.6-ubuntu"
    container_name: "evemonk_grafana"
    restart: "unless-stopped"
    user: "104"
    volumes:
      - "grafana_data:/var/lib/grafana:rw"
      - "./grafana/provisioning/:/etc/grafana/provisioning:ro"
    env_file:
      - "./grafana/config.monitoring"

  imageproxy:
    image: "ghcr.io/willnorris/imageproxy:v0.11.2"
    container_name: "evemonk_imageproxy"
    restart: "unless-stopped"
    command: '-addr 0.0.0.0:8081 -userAgent "EveMonk image proxy cacher (https://evemonk.com/)"'

  geoip:
    image: "docker.io/maxmindinc/geoipupdate:v4.8.0"
    container_name: "evemonk_geoip"
    restart: "unless-stopped"
    environment:
      - "GEOIPUPDATE_EDITION_IDS=GeoLite2-Country"
      - "GEOIPUPDATE_FREQUENCY=168" # update every 7 days
    env_file:
      - "geoip/geoip.conf"
    volumes:
      - "geoip_data:/usr/share/GeoIP:rw"

  plausible_db:
    image: "docker.io/library/postgres:13.6"
    container_name: "evemonk_plausible_db"
    restart: "unless-stopped"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - "plausible_db_data:/var/lib/postgresql/data:rw"
      - "./postgres:/docker-entrypoint-initdb.d:ro"

  plausible_events_db:
    image: "docker.io/yandex/clickhouse-server:21.3.20.1"
    container_name: "evemonk_plausible_events_db"
    restart: "unless-stopped"
    volumes:
      - "plausible_events_db_data:/var/lib/clickhouse:rw"
      - "./plausible_events_db/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro"
      - "./plausible_events_db/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  plausible:
    image: "docker.io/plausible/analytics:v1.4.4"
    container_name: "evemonk_plausible"
    restart: "unless-stopped"
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh db init-admin && /entrypoint.sh run"
    env_file:
      - "plausible-conf.env"
    volumes:
      - "geoip_data:/usr/share/GeoIP:ro"
    environment:
      GEOLITE2_COUNTRY_DB: "/usr/share/GeoIP/GeoLite2-Country.mmdb"

#  mail:
#    image: "docker.io/tvial/docker-mailserver:latest"
#    hostname: "mail"
#    domainname: "evemonk.com"
#    container_name: "evemonk_mail"
#    restart: "unless-stopped"
#    ports:
#      - "25:25"
#    volumes:
#      - "maildata:/var/mail:rw"
#      - "mailstate:/var/mail-state:rw"
#      - "maillogs:/var/log/mail:rw"
#      - "./mail/config/:/tmp/docker-mailserver:ro"
#    env_file:
#      - ".env_mail"
#      - "./mail/env-mailserver"

  mailserver:
    image: "docker.io/mailserver/docker-mailserver:10.4.0"
    container_name: "evemonk_mailserver"
    # If the FQDN for your mail-server is only two labels (eg: example.com),
    # you can assign this entirely to `hostname` and remove `domainname`.
    hostname: "mail"
    domainname: "evemonk.com"
    restart: "unless-stopped"
    env_file: "./mailserver/mailserver.env"
    # More information about the mail-server ports:
    # https://docker-mailserver.github.io/docker-mailserver/edge/config/security/understanding-the-ports/
    ports:
      - "25:25"    # SMTP  (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
    volumes:
      - "mailserver_var_mail:/var/mail:rw"
      - "mailserver_var_mailstate:/var/mail-state:rw"
      - "mailserver_var_log_mail:/var/log/mail:rw"
      - "mailserver_config:/tmp/docker-mailserver:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "https_portal:/var/lib/https-portal:ro"
    environment:
      - "ENABLE_AMAVIS=0"
      - "ENABLE_DNSBL=1"
      - "SSL_TYPE=manual"
      - "SSL_CERT_PATH=/var/lib/https-portal/mail.evemonk.com/production/signed.crt"
      - "SSL_KEY_PATH=/var/lib/https-portal/mail.evemonk.com/production/domain.key"
      - "POSTMASTER_ADDRESS=igor.zubkov@gmail.com"

  pghero:
    image: "docker.io/biow0lf/evemonk-pghero:v1.0.61"
    container_name: "evemonk_pghero"
    restart: "unless-stopped"
    env_file: "./evemonk-pghero/.env"
    read_only: true

  sidekiq-web-ui:
    image: "docker.io/biow0lf/evemonk-sidekiq:v1.0.61"
    container_name: "evemonk_sidekiq_web_ui"
    restart: "unless-stopped"
    env_file: "./evemonk-sidekiq-ui/.env"
    read_only: true

  pg-extras:
    image: "docker.io/biow0lf/evemonk-pg-extras:v1.0.13"
    container_name: "evemonk_pg_extras"
    restart: "unless-stopped"
    env_file: "./evemonk-pg-extras/.env"
    read_only: true

  backend:
    image: "docker.io/biow0lf/evemonk:v0.6.27"
    container_name: "evemonk_backend"
    restart: "unless-stopped"
#    read_only: true
    env_file: ".env"
    command: "./bin/backend"
    volumes:
#      - "./evemonk/newrelic.yml:/app/config/newrelic.yml:ro"
      - "/srv/static/sde-20220202:/app/static:ro"

  sidekiq:
    image: "docker.io/biow0lf/evemonk:v0.6.27"
    container_name: "evemonk_sidekiq"
    restart: "unless-stopped"
#    read_only: true
    env_file: ".env"
    environment:
      PORT: "5100"
    ports:
      - "5100:5100"
    command: "./bin/sidekiq-server"
    volumes:
#      - "./evemonk-sidekiq/newrelic.yml:/app/config/newrelic.yml:ro"
      - "/srv/static/sde-20220202:/app/static:ro"

  cron:
    image: "docker.io/biow0lf/evemonk:v0.6.27"
    container_name: "evemonk_cron"
    restart: "unless-stopped"
#    read_only: true
    env_file: ".env"
    command: "./bin/cron"
    volumes:
#      - "./evemonk-cron/newrelic.yml:/app/config/newrelic.yml:ro"
      - "/srv/static/sde-20220202:/app/static:ro"

  irregularquiz:
    image: "docker.io/biow0lf/irregularquiz:v1.0.1"
    container_name: "evemonk_irregularquiz"
    restart: "unless-stopped"
